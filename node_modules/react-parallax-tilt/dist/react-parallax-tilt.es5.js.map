{"version":3,"file":"react-parallax-tilt.es5.js","sources":["../src/common/utils.ts","../src/features/glare/Glare.ts","../src/features/tilt/Tilt.ts","../src/react-parallax-tilt/defaultProps.ts","../src/react-parallax-tilt/ReactParallaxTilt.tsx"],"sourcesContent":["export function setTransition<T extends HTMLElement>(\n  element: T,\n  property: 'all' | 'opacity',\n  duration: number,\n  timing: string,\n): void {\n  element.style.transition = `${property} ${duration}ms ${timing}`;\n}\n\nexport function constrainToRange(value: number, rangeMin: number, rangeMax: number): number {\n  return Math.min(Math.max(value, rangeMin), rangeMax);\n}\n","import { ElementSizePosition, ClientPosition, IStyle } from '../../common/types';\nimport { constrainToRange } from '../../common/utils';\n\nimport { GlareProps, GlareSize } from './types';\n\nexport class Glare implements IStyle {\n  public glareWrapperEl: HTMLDivElement;\n  public glareEl: HTMLDivElement;\n\n  public glareAngle = 0;\n  public glareOpacity = 0;\n\n  constructor(wrapperElSize: ElementSizePosition) {\n    this.glareWrapperEl = document.createElement('div');\n    this.glareEl = document.createElement('div');\n    this.glareWrapperEl.appendChild(this.glareEl);\n    this.glareWrapperEl.className = 'glare-wrapper';\n    this.glareEl.className = 'glare';\n\n    const styleGlareWrapper = {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      '-webkit-mask-image': '-webkit-radial-gradient(white, black)',\n    };\n\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    const styleGlare = {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      'transform-origin': '0% 0%',\n      'pointer-events': 'none',\n      width: `${glareSize.width}px`,\n      height: `${glareSize.height}px`,\n    };\n\n    Object.assign(this.glareWrapperEl.style, styleGlareWrapper);\n    Object.assign(this.glareEl.style, styleGlare);\n  }\n\n  private getBorderRadius = (props: GlareProps): GlareProps['glareBorderRadius'] => {\n    const { glareBorderRadius } = props;\n    return glareBorderRadius;\n  };\n\n  private calculateGlareSize = (wrapperElSize: ElementSizePosition): GlareSize => {\n    const { width: w, height: h } = wrapperElSize;\n    const wrapperElDiagonal = Math.sqrt(w! ** 2 + h! ** 2);\n    return {\n      width: wrapperElDiagonal,\n      height: wrapperElDiagonal,\n    };\n  };\n\n  public setSize = (wrapperElSize: ElementSizePosition): void => {\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    this.glareEl.style.width = `${glareSize.width}px`;\n    this.glareEl.style.height = `${glareSize.height}px`;\n  };\n\n  public update = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    this.updateAngle(wrapperElClientPosition, props.glareReverse!);\n    this.updateOpacity(wrapperElClientPosition, props, flipVertically, flipHorizontally);\n  };\n\n  private updateAngle = (wrapperElClientPosition: ClientPosition, glareReverse: boolean): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n\n    const rad2Deg = 180 / Math.PI;\n    // top 0째, right +90째, bottom -+180째, left -90째\n    const glareAngle = xPercentage ? Math.atan2(yPercentage, -xPercentage) * rad2Deg : 0;\n\n    const addGlareAngle = glareReverse ? 180 : 0;\n    this.glareAngle = glareAngle - addGlareAngle;\n  };\n\n  private updateOpacity = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { glarePosition, glareReverse, glareMaxOpacity } = props;\n\n    const flipVerticallyFactor = flipVertically ? -1 : 1;\n    const flipHorizontallyFactor = flipHorizontally ? -1 : 1;\n    const glareReverseFactor = glareReverse ? -1 : 1;\n\n    let glareOpacityFactor: number;\n    switch (glarePosition) {\n      case 'top':\n        glareOpacityFactor = -xPercentage! * flipVerticallyFactor * glareReverseFactor;\n        break;\n      case 'right':\n        glareOpacityFactor = yPercentage! * flipHorizontallyFactor * glareReverseFactor;\n        break;\n      case 'bottom':\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor * glareReverseFactor;\n        break;\n      case 'left':\n        glareOpacityFactor = -yPercentage! * flipHorizontallyFactor * glareReverseFactor;\n        break;\n      case 'all':\n        glareOpacityFactor = Math.hypot(xPercentage, yPercentage);\n        break;\n      default:\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor * glareReverseFactor;\n    }\n\n    const glareOpacityFactorRemoveNegative = constrainToRange(glareOpacityFactor, 0, 100);\n    this.glareOpacity = (glareOpacityFactorRemoveNegative * glareMaxOpacity!) / 100;\n  };\n\n  public render = (props: GlareProps): void => {\n    const { glareColor } = props;\n    this.glareWrapperEl.style.borderRadius = this.getBorderRadius(props);\n    this.glareEl.style.transform = `rotate(${this.glareAngle}deg) translate(-50%, -50%)`;\n    this.glareEl.style.opacity = this.glareOpacity.toString();\n\n    const linearGradient = `linear-gradient(0deg, rgba(255,255,255,0) 0%, ${glareColor} 100%)`;\n    this.glareEl.style.background = linearGradient;\n  };\n}\n","import { ClientPosition, IStyle } from '../../common/types';\nimport { constrainToRange } from '../../common/utils';\n\nimport { TiltProps } from './types';\n\nconst TILT_ANGLE_CONSTRAINT = 90;\n\nexport class Tilt<T extends HTMLElement> implements IStyle {\n  public glareAngle = 0;\n  public glareOpacity = 0;\n\n  public tiltAngleX = 0;\n  public tiltAngleY = 0;\n  public tiltAngleXPercentage = 0;\n  public tiltAngleYPercentage = 0;\n\n  public update = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    this.updateTilt(wrapperElClientPosition, props);\n    this.updateTiltManualInput(wrapperElClientPosition, props);\n    this.updateTiltReverse(props);\n    this.updateTiltLimits(props);\n  };\n\n  private updateTilt = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    const tiltTowardMouse = -1;\n    this.tiltAngleX = (xPercentage! * tiltMaxAngleX!) / 100;\n    this.tiltAngleY = ((yPercentage! * tiltMaxAngleY!) / 100) * tiltTowardMouse;\n  };\n\n  private updateTiltManualInput = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { tiltAngleXManual, tiltAngleYManual, tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    const isManualInputIgnoreOtherInputs = tiltAngleXManual !== null || tiltAngleYManual !== null;\n    if (isManualInputIgnoreOtherInputs) {\n      this.tiltAngleX = tiltAngleXManual !== null ? tiltAngleXManual! : 0;\n      this.tiltAngleY = tiltAngleYManual !== null ? tiltAngleYManual! : 0;\n      wrapperElClientPosition.xPercentage = (100 * this.tiltAngleX) / tiltMaxAngleX!;\n      wrapperElClientPosition.yPercentage = (100 * this.tiltAngleY) / tiltMaxAngleY!;\n    }\n  };\n\n  private updateTiltReverse = (props: TiltProps): void => {\n    const tiltReverse = props.tiltReverse ? -1 : 1;\n    this.tiltAngleX = tiltReverse * this.tiltAngleX;\n    this.tiltAngleY = tiltReverse * this.tiltAngleY;\n  };\n\n  private updateTiltLimits = (props: TiltProps): void => {\n    const { tiltAxis } = props;\n\n    this.tiltAngleX = constrainToRange(this.tiltAngleX, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\n    this.tiltAngleY = constrainToRange(this.tiltAngleY, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\n\n    const isOnlyOneAxisEnabledForTilting = tiltAxis;\n    if (isOnlyOneAxisEnabledForTilting) {\n      this.tiltAngleX = tiltAxis === 'x' ? this.tiltAngleX : 0;\n      this.tiltAngleY = tiltAxis === 'y' ? this.tiltAngleY : 0;\n    }\n  };\n\n  public updateTiltAnglesPercentage = (props: TiltProps): void => {\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    this.tiltAngleXPercentage = (this.tiltAngleX / tiltMaxAngleX!) * 100;\n    this.tiltAngleYPercentage = (this.tiltAngleY / tiltMaxAngleY!) * 100;\n  };\n\n  public render = (element: T): void => {\n    element.style.transform += `rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `;\n  };\n}\n","import { GlareProps } from '../features/glare/types';\nimport { TiltProps } from '../features/tilt/types';\n\nimport { Props } from './types';\n\nconst defaultGlareProps: GlareProps = {\n  glareEnable: false,\n  glareMaxOpacity: 0.7,\n  glareColor: '#ffffff',\n  glarePosition: 'bottom',\n  glareReverse: false,\n  glareBorderRadius: '0',\n};\n\nconst defaultTiltProps: TiltProps = {\n  tiltEnable: true,\n  tiltReverse: false,\n  tiltAngleXInitial: 0,\n  tiltAngleYInitial: 0,\n  tiltMaxAngleX: 20,\n  tiltMaxAngleY: 20,\n  tiltAxis: null,\n  tiltAngleXManual: null,\n  tiltAngleYManual: null,\n};\n\nexport const defaultProps: Props = {\n  scale: 1,\n  perspective: 1000,\n  flipVertically: false,\n  flipHorizontally: false,\n  reset: true,\n  transitionEasing: 'cubic-bezier(.03,.98,.52,.99)',\n  transitionSpeed: 400,\n  trackOnWindow: false,\n  gyroscope: false,\n  ...defaultTiltProps,\n  ...defaultGlareProps,\n};\n","import React, { PureComponent, MouseEvent, TouchEvent } from 'react';\n\nimport { setTransition, constrainToRange } from '../common/utils';\nimport { Glare } from '../features/glare/Glare';\nimport { Tilt } from '../features/tilt/Tilt';\n\nimport { defaultProps } from './defaultProps';\nimport { Props, SupportedEvent, EventType, CustomEventType, WrapperElement } from './types';\n\nclass ReactParallaxTilt extends PureComponent<Props> {\n  public static defaultProps = defaultProps;\n  private wrapperEl: WrapperElement<HTMLDivElement> = {\n    node: null,\n    size: {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0,\n    },\n    clientPosition: {\n      x: null,\n      y: null,\n      xPercentage: 0,\n      yPercentage: 0,\n    },\n    updateAnimationId: null,\n    scale: 1,\n  };\n  private tilt: Tilt<HTMLDivElement> | null = null;\n  private glare: Glare | null = null;\n\n  public componentDidMount() {\n    this.tilt = new Tilt<HTMLDivElement>();\n    this.initGlare();\n    this.addEventListeners();\n    const autoreset = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n    this.mainLoop(autoreset);\n    const initialEvent = new CustomEvent<CustomEventType>('initial' as CustomEventType);\n    this.emitOnMove(initialEvent);\n  }\n\n  public componentWillUnmount() {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.removeEventListeners();\n  }\n\n  public componentDidUpdate() {\n    const eventType = new CustomEvent<CustomEventType>('propChanged' as CustomEventType);\n    this.mainLoop(eventType);\n  }\n\n  private addEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.addEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.addEventListener('mouseenter', this.onEnter);\n      window.addEventListener('mousemove', this.onMove);\n      window.addEventListener('mouseout', this.onLeave);\n      window.addEventListener('touchstart', this.onEnter);\n      window.addEventListener('touchmove', this.onMove);\n      window.addEventListener('touchend', this.onLeave);\n    }\n\n    if (gyroscope) {\n      this.addDeviceOrientationEventListener();\n    }\n  }\n\n  /* istanbul ignore next */\n  private addDeviceOrientationEventListener = async () => {\n    if (!window.DeviceOrientationEvent && process.env.NODE_ENV === 'development') {\n      console.warn(\"Browser doesn't support Device Orientation.\");\n      return;\n    }\n\n    const iOS13OrHigherDevice = typeof DeviceMotionEvent.requestPermission === 'function';\n    if (iOS13OrHigherDevice) {\n      try {\n        const response = await DeviceOrientationEvent.requestPermission();\n        if (response === 'granted') {\n          window.addEventListener('deviceorientation', this.onMove);\n        }\n        return;\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n    }\n\n    window.addEventListener('deviceorientation', this.onMove);\n  };\n\n  private removeEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.removeEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.removeEventListener('mouseenter', this.onEnter);\n      window.removeEventListener('mousemove', this.onMove);\n      window.removeEventListener('mouseout', this.onLeave);\n      window.removeEventListener('touchstart', this.onEnter);\n      window.removeEventListener('touchmove', this.onMove);\n      window.removeEventListener('touchend', this.onLeave);\n    }\n\n    // jest - instance of DeviceOrientationEvent not possible\n    /* istanbul ignore next */\n    if (gyroscope && window.DeviceOrientationEvent) {\n      window.removeEventListener('deviceorientation', this.onMove);\n    }\n  }\n\n  public setSize = () => {\n    this.setWrapperElSize();\n    if (this.glare) {\n      this.glare.setSize(this.wrapperEl.size);\n    }\n  };\n\n  private setWrapperElSize() {\n    const rect = this.wrapperEl.node!.getBoundingClientRect();\n    this.wrapperEl.size.width = this.wrapperEl.node!.offsetWidth;\n    this.wrapperEl.size.height = this.wrapperEl.node!.offsetHeight;\n    this.wrapperEl.size.left = rect.left + window.scrollX;\n    this.wrapperEl.size.top = rect.top + window.scrollY;\n  }\n\n  private initGlare() {\n    const { glareEnable } = this.props;\n\n    if (!glareEnable) {\n      return;\n    }\n\n    this.glare = new Glare(this.wrapperEl.size);\n    this.wrapperEl.node!.appendChild(this.glare.glareWrapperEl);\n  }\n\n  public mainLoop = (event: SupportedEvent) => {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.processInput(event);\n    this.update(event.type);\n    this.wrapperEl.updateAnimationId = requestAnimationFrame(this.renderFrame);\n  };\n\n  private onEnter = (event: SupportedEvent) => {\n    const { onEnter } = this.props;\n\n    // Update wrapped tilt component params in case\n    // - it's being manipulated (position, size, etc.) in consumed application\n    // - initial (delayed) images/children load\n    this.setSize();\n\n    // increase performance by notifying browser 'transform' property is just about to get changed\n    this.wrapperEl.node!.style.willChange = 'transform';\n    this.setTransitions();\n\n    if (onEnter) {\n      onEnter(event.type);\n    }\n  };\n\n  private onMove = (event: SupportedEvent): void => {\n    this.mainLoop(event);\n    this.emitOnMove(event);\n  };\n\n  private emitOnMove(event: SupportedEvent) {\n    const { onMove } = this.props;\n    if (!onMove) {\n      return;\n    }\n    let glareAngle = 0;\n    let glareOpacity = 0;\n    if (this.glare) {\n      glareAngle = this.glare.glareAngle;\n      glareOpacity = this.glare.glareOpacity;\n    }\n\n    onMove(\n      this.tilt!.tiltAngleX!,\n      this.tilt!.tiltAngleY!,\n      this.tilt!.tiltAngleXPercentage!,\n      this.tilt!.tiltAngleYPercentage!,\n      glareAngle,\n      glareOpacity,\n      event.type,\n    );\n  }\n\n  private onLeave = (event: SupportedEvent) => {\n    const { onLeave } = this.props;\n    this.setTransitions();\n\n    if (onLeave) {\n      onLeave(event.type);\n    }\n\n    if (this.props.reset) {\n      const autoResetEvent = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n      this.onMove(autoResetEvent);\n    }\n  };\n\n  private processInput = (event: SupportedEvent): void => {\n    const { scale } = this.props;\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n        this.wrapperEl.clientPosition.x = (event as MouseEvent).pageX;\n        this.wrapperEl.clientPosition.y = (event as MouseEvent).pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'touchmove':\n        this.wrapperEl.clientPosition.x = (event as TouchEvent).touches[0].pageX;\n        this.wrapperEl.clientPosition.y = (event as TouchEvent).touches[0].pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      // jest - instance of DeviceOrientationEvent not possible\n      /* istanbul ignore next */\n      case 'deviceorientation':\n        this.processInputDeviceOrientation(event as DeviceOrientationEvent);\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'autoreset':\n        const { tiltAngleXInitial, tiltAngleYInitial, tiltMaxAngleX, tiltMaxAngleY } = this.props;\n        const xPercentage = (tiltAngleXInitial! / tiltMaxAngleX!) * 100;\n        const yPercentage = (tiltAngleYInitial! / tiltMaxAngleY!) * 100;\n        this.wrapperEl.clientPosition.xPercentage = constrainToRange(xPercentage, -100, 100);\n        this.wrapperEl.clientPosition.yPercentage = constrainToRange(yPercentage, -100, 100);\n        this.wrapperEl.scale = 1;\n        break;\n    }\n  };\n\n  // jest - instance of DeviceOrientationEvent not possible\n  /* istanbul ignore next */\n  private processInputDeviceOrientation = (event: DeviceOrientationEvent): void => {\n    if (!event.gamma || !event.beta || !this.props.gyroscope) {\n      return;\n    }\n\n    const { tiltMaxAngleX, tiltMaxAngleY } = this.props;\n\n    const angleX = event.beta; // motion of the device around the x axis in degree in the range:[-180,180]\n    const angleY = event.gamma; // motion of the device around the y axis in degree in the range:[-90,90]\n\n    this.wrapperEl.clientPosition.xPercentage = (angleX! / tiltMaxAngleX!) * 100;\n    this.wrapperEl.clientPosition.yPercentage = (angleY! / tiltMaxAngleY!) * 100;\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(this.wrapperEl.clientPosition.xPercentage, -100, 100);\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(this.wrapperEl.clientPosition.yPercentage, -100, 100);\n  };\n\n  private update = (eventType: EventType | string): void => {\n    const { tiltEnable, flipVertically, flipHorizontally } = this.props;\n\n    const isAngleSetToDefaultAlready = eventType !== 'autoreset';\n    const isAngleRetrievedFromGyroscope = eventType !== 'deviceorientation';\n    const isPropChanged = eventType !== 'propChanged';\n    const isUpdateCalculationNeeded = isAngleSetToDefaultAlready && isAngleRetrievedFromGyroscope && isPropChanged;\n    if (isUpdateCalculationNeeded) {\n      this.updateClientInput();\n    }\n\n    if (tiltEnable) {\n      this.tilt!.update(this.wrapperEl.clientPosition, this.props);\n    }\n\n    this.updateFlip();\n\n    this.tilt!.updateTiltAnglesPercentage(this.props);\n\n    if (this.glare) {\n      this.glare.update(this.wrapperEl.clientPosition, this.props, flipVertically!, flipHorizontally!);\n    }\n  };\n\n  private updateClientInput = (): void => {\n    const { trackOnWindow } = this.props;\n\n    let xTemp;\n    let yTemp;\n    if (trackOnWindow) {\n      const { x, y } = this.wrapperEl.clientPosition;\n\n      xTemp = (y! / window.innerHeight) * 200 - 100;\n      yTemp = (x! / window.innerWidth) * 200 - 100;\n    } else {\n      const {\n        size: { width, height, left, top },\n        clientPosition: { x, y },\n      } = this.wrapperEl;\n\n      xTemp = ((y! - top!) / height!) * 200 - 100;\n      yTemp = ((x! - left!) / width!) * 200 - 100;\n    }\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(xTemp, -100, 100);\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(yTemp, -100, 100);\n  };\n\n  private updateFlip = (): void => {\n    const { flipVertically, flipHorizontally } = this.props;\n\n    if (flipVertically) {\n      this.tilt!.tiltAngleX += 180;\n      this.tilt!.tiltAngleY *= -1;\n    }\n    if (flipHorizontally) {\n      this.tilt!.tiltAngleY += 180;\n    }\n  };\n\n  public renderFrame = (): void => {\n    this.resetWrapperElTransform();\n\n    this.renderPerspective();\n    this.tilt!.render(this.wrapperEl.node!);\n    this.renderScale();\n    if (this.glare) {\n      this.glare.render(this.props);\n    }\n  };\n\n  private resetWrapperElTransform(): void {\n    this.wrapperEl.node!.style.transform = '';\n  }\n\n  private renderPerspective(): void {\n    const { perspective } = this.props;\n\n    this.wrapperEl.node!.style.transform += `perspective(${perspective}px) `;\n  }\n\n  private renderScale(): void {\n    const { scale } = this.wrapperEl;\n\n    this.wrapperEl.node!.style.transform += `scale3d(${scale},${scale},${scale})`;\n  }\n\n  private setTransitions() {\n    const { transitionSpeed, transitionEasing } = this.props;\n    setTransition<HTMLDivElement>(this.wrapperEl.node!, 'all', transitionSpeed!, transitionEasing!);\n\n    if (this.glare) {\n      setTransition<HTMLDivElement>(this.glare.glareEl, 'opacity', transitionSpeed!, transitionEasing!);\n    }\n  }\n\n  public render() {\n    const { children, className, style } = this.props;\n    return (\n      <div\n        ref={(el) => (this.wrapperEl.node = el)}\n        onMouseEnter={this.onEnter}\n        onMouseMove={this.onMove}\n        onMouseLeave={this.onLeave}\n        onTouchStart={this.onEnter}\n        onTouchMove={this.onMove}\n        onTouchEnd={this.onLeave}\n        className={className}\n        style={style}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default ReactParallaxTilt;\n"],"names":["setTransition","element","property","duration","timing","style","transition","constrainToRange","value","rangeMin","rangeMax","Math","min","max","wrapperElSize","this","props","h","wrapperElDiagonal","sqrt","width","height","glareSize","_this","calculateGlareSize","glareEl","wrapperElClientPosition","flipVertically","flipHorizontally","updateAngle","glareReverse","updateOpacity","xPercentage","rad2Deg","PI","glareAngle","atan2","glareOpacityFactor","yPercentage","glareMaxOpacity","flipVerticallyFactor","flipHorizontallyFactor","glareReverseFactor","hypot","glareOpacityFactorRemoveNegative","glareOpacity","glareColor","glareWrapperEl","borderRadius","getBorderRadius","transform","opacity","toString","background","document","createElement","appendChild","className","styleGlare","position","top","left","transform-origin","pointer-events","Object","assign","overflow","-webkit-mask-image","updateTilt","updateTiltManualInput","updateTiltReverse","updateTiltLimits","tiltMaxAngleY","tiltAngleX","tiltAngleY","tiltAngleXManual","tiltAngleYManual","tiltMaxAngleX","tiltReverse","tiltAxis","tiltAngleXPercentage","tiltAngleYPercentage","defaultProps","scale","perspective","reset","transitionEasing","transitionSpeed","trackOnWindow","gyroscope","tiltEnable","tiltAngleXInitial","tiltAngleYInitial","glareEnable","glarePosition","glareBorderRadius","node","size","clientPosition","x","y","updateAnimationId","window","DeviceOrientationEvent","process","env","NODE_ENV","console","warn","DeviceMotionEvent","requestPermission","_a","addEventListener","onMove","error","err_1","setWrapperElSize","glare","setSize","wrapperEl","event","cancelAnimationFrame","processInput","update","type","requestAnimationFrame","renderFrame","onEnter","willChange","setTransitions","mainLoop","emitOnMove","onLeave","autoResetEvent","CustomEvent","pageX","pageY","touches","processInputDeviceOrientation","gamma","beta","angleY","eventType","updateClientInput","tilt","updateFlip","updateTiltAnglesPercentage","xTemp","yTemp","innerHeight","innerWidth","_b","_c","_d","resetWrapperElTransform","renderPerspective","render","renderScale","__extends","ReactParallaxTilt","Tilt","initGlare","addEventListeners","autoreset","initialEvent","removeEventListeners","addDeviceOrientationEventListener","removeEventListener","rect","getBoundingClientRect","offsetWidth","offsetHeight","scrollX","scrollY","Glare","React","ref","el","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","PureComponent"],"mappings":"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"}